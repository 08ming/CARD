-stake proposals rely on stake distribution being available in the clear. As a frst step, let us consider how to hide the wealth of the lottery winner: a simple idea that might come to mind is to encrypt the stakes on the blockchain, and to replace the proof of winning the lottery (e.g. in form of a correct block) with a proof that uses the encrypted stakes instead. However, this falls short of our goal in at least two ways. For instance, in case of block leaders: 1) it is still possible to distinguish (for instance) whether two blocks were generated by the same block leader or not and, crucially 2) since the probability of being elected as block leader is proportional to one¡¯s wealth, the frequency with which a user wins the lottery indirectly leaks information about their stakes (i.e., a user who is observed to win t out of n blocks has relative stakes in the system close to t/n). Thus, we conclude that even if block leaders are only interested in hiding their wealth, a PPoS must necessarily hide their identity as well. Similar concerns are true for committee based protocols as well, where the number of times a user becomes a committee member reveals information about their wealth. 
In Section 4 we provide a framework for VRF-based private stake lottery. Our framework is parametrized by a lottery mechanism, and allows therefore to construct PPoS protocols for some of the most popular lottery mechanisms used in current (non-private) PoS protocols (e.g., Algorand [GHM+17], Ouroboros Praos [DGKR18], etc.). 
After having established the frst feasibility result in this area, in Section 5 we investigate how to e.ciently implement PPoS. Our starting point is one of the main PoS candidates which comes with a rigorous proof of security, namely Ouroboros Praos. 
In a nutshell, Ouroboros Praos works as follows: Every user in the system registers a verifcation key for a verifable random function e.g., a PRF for which it is possible to prove that a given output is in the image of the function relative to the verifcation key. Then, at every round (or slots), users can apply the VRF to the slot number and thus receive a (pseudorandom) value. If the value is less than (a function of) their wealth, then that user has won the election process and can generate a new block. Thanks to the VRF property, all other users can verify that the VRF has been correctly computed, and since the wealth of the user is public as well, every other user can compare the output of the VRF with the (function of) the user¡¯s wealth. 
Using the private stake lottery of Section 4, it would be possible for the elected leader to prove correctness of all steps above (without revealing any further information) using the necessary zero-knowledge proofs. However, this would result in a very ine.cient solution. To see why, we need to say a few more words about the winning condition of Ouroboros Praos: one of the goals of Ouroboros Praos is to ensure that a user cannot artifcially increase their probability of winning the lottery, therefore Ouroboros Praos compares the output of the VRF with a function of the wealth that satisfes the ¡°independent aggregation¡± property i.e., a function such that the probability that two users win the lottery is the same as the probability of winning for a single user who owns the same wealth as the two users combined. In particular, the function used by Ouroboros Praos has the form 
¡ã f (x)=1 . (1 . f)stk/Stake 
where stk is wealth of the user, Stake is the total amount of stakes in the syste