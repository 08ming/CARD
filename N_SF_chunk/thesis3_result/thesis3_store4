domized algorithm, 
R
we use y A(x) to denote that y is the output of A on x. We write x X to mean sampling a value x uniformly from the set X . We write PPT to denote a probabilistic polynomial-time algorithm. Throughout the paper, we use  to denote the security parameter or level. A function is negligible if for all large enough values of the input, it is smaller than the inverse of any polynomial. We use negl to denote a negligible function. We denote by H a cryptographic hash function. 
2.1 Zero-knowledge proofs 
Let R be an e.ciently computable binary relation which consists of pairs of the form (x, w) where x is a statement and w is a witness. Let L be the language associated with the relation R, i.e., L = {x |9w s.t. R(x, w)=1}. L is an NP language if there is a polynomial p such that every w in R(x) has length at most p(x) for all x. 
A zero-knowledge proof for L lets a prover P convince a verifer V that x 2 L for a common input x without revealing w. A proof of knowledge captures not only the truth of a statement x 2 L, but also that the prover ¡°possesses¡± a witness w to this fact. This is captured by requiring that if P can convince V with reasonably high probability, then a w can be e.ciently extracted from P given x. 
Non-interactive Zero-knowledge Proofs. A model that assumes a trusted setup phase, where a string of a certain structure, also called the public parameters of the system is generated, is called the common reference string (CRS) model. Non-interactive zero-knowledge proofs (NIZKs) in the CRS model were introduced in [BFM88]. We give a formal defnition of NIZKs in AppendixB.1. In this paper, we will be concerned with non-interactive proofs. 

2.2 Commitment schemes 
A commitment scheme for a message space is a triple of algorithms (Setup, Com, Open) such that Setup(1) outputs a public commitment key; Com given the public key and a message outputs a com-mitment along with opening information. Open given a commitment and opening information outputs a message or ? if the commitment is not valid. We require a commitment scheme to satisfy correctness, hiding and binding properties. Informally, the hiding property guarantees that no PPT adversary can generate two messages such that it can distinguish between their commitments. The binding property guarantees that, informally, no PPT adversary can open a commitment to two dierent messages. 

2.3 Sigma Protocols 
A sigma protocol for a language L is a three round public-coin protocol between a prover P and a verifer 
V . P ¡¯s frst message in a sigma protocol is denoted by aP(x; R). V ¡¯s message is a random string r 2{0, 1}. P¡¯s second message is e = P(w, a, r, R). (a, r, e) is called a transcript, and if the verifer accepts, that is V (x, a, r, e) = 1, then the transcript is accepting for s. 
Defnition 1 (Sigma protocol). An interactive protocol hP, V i between prover P and verifer V is a  protocol for a relation R if the following properties are satisfed: 
1. 
It is a three move public coin protocol. 

2. 
Completeness: If P and V follow the protocol then Pr[hP (w),V i (x) = 1] = 1 whenever (x, w) 2 R. 

3. 
Special soundness: There exists a polynom