e discrete logarithm sigma protocol proofs [CS97, MGGR13]. The proof for part of the statement represented as a circuit (the hash function) in the hash-based AVRF can be implemented using SNARKs, and we can use the construction of [AGM18] for SNARK on algebraically committed input and output so we can work with Pedersen commitments and sigma protocols for other parts of the proof. The rest of the proof components may be implemented using standard sigma protocol techniques. 


Usage of ・zk in Ouroboros Praos. If a stakeholder has won the lottery for slot sl, they will create a new block of the form (pt, sl, st, c, ・zk) where pt is a reference to a previous block, st the block payload, c is a commitment to y, the output of the AVRF, and ・zk is the proof as described above. The stakeholder then publishes the block using an anonymous broadcast. 
We give an estimate of the proof size that determines the overhead that is incurred by privacy preserving Ouroboros Praos compared to the non-private version. The size of ・LE is dominated by O(s) group/feld elements due to the sigma protocol OR composition, with the rest of the components resulting in succinct SNARK proofs. ・sig for the key-evolving signature scheme may be implemented by using SNARK on committed input together with sigma protocols with only a slight overhead in size over the SNARK proof. The size of ・own is dominated by the proof size for the predicate Eq which is O() elements for a statistical security parameter . The size of ・zk is therefore roughly (ignoring the size of proofs for statements that use SNARKs and standard sigma protocols), O(s)+O() group/feld elements where s is the number of bits to represent the stake in the system,  is the statistical security parameter. We remark that the actual complexity depends on the implementation of the signature scheme, and potentially the hash function of the AVRF. 
Corollary 1. Ouroboros Praos used with the private lottery protocol results in a private proof-of-stake protocol. 
Proof. The proof easily follows from the properties of the underlying building blocks. Note that overall protocol remains the same as in the original Ouroboros Praos, with only small dierences: Instead of using a VRF, a stakeholder uses an AVRF to determine whether they win the slot-lottery. Then, a slot leader will publish a block with a zero-knowledge proof of the above form (instead of adding his verifcation key and a VRF-proof). Due to the soundness of the zero-knowledge protocol and the uniqueness property of the AVRF, the modifed protocol still has the same security properties as Ouroboros Praos i.e., the the protocol still reaches consensus under the same security guarantees as the original protocol. 
The proof that the resulting protocol is a private proof of stake follows directly from the proof of Theorem 1. 
Acknowledgements. We would like the thank: Alessandra Scafuro, Foteini Baldimtsi, Varun Madathil and Linfeng Zhou for pointing out an issue with instantiating the zero-knowledge proofs about random oracle pre-images in an earlier version of the paper; Pavel Hub＞a・cek for constructive feedback. 


References 